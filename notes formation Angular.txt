---------------------------------------
Install
---------------------------------------
Installer node.js, visual studio, git, notepad++...
node.js donne npm

---------------------------------------
npm
---------------------------------------
npm gère les dépendances du projet JS comme Maven

npm init pour initialiser un projet
npm install jquery (ou même bootstrap) pour ajouter ça au projet

---------------------------------------
JS 
---------------------------------------
var démilite la portée d'une variable à la fonction où elle a été déclarée
let délimite la portée d'une variable à la paire d'accolades qui la contient. const aussi mais que pour des constantes


Notion de promesse
Cela permet de faire les traitements asynchrones du JS en le lisant/écrivant à la manière synchrone
La promesse attend qu'on lui rende une variable resolve ou reject pour renvoyer cette réponse
En conséquence, on peut agir (comme recevoir une HTTP 200 ou une HTTP 404) à l'issue de cette promesse avec then ou catch

async permet de traiter les promesses plus lisiblement qu'avec des then

Promise.all ou .race permet de consommer les ressources de la promesse

AUCUN CONSUMER ne détruit la ressource à la lecture.
4 consumers peuvent donc accéder aux ressources du même producer

JS permet d'écrire les fonctions simples sous forme de lambda sans redéfinir la valeur de this
var add = (a,b) => `${a} + ${b} = ${a+b}`
var afficher = (...values) => console.log(values)

On peut transcrire du ts en js, en ayant du js exploitable même si ts lève des erreurs
>tsc greeter.ts
greeter.ts:10:27 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.
10 let hellonumber = greeter(42);
Found 1 error.               ~~
>node greeter.js
Hello luckydu43
Hello 42




---------------------------------------
Angular
---------------------------------------
ng new angular-tour-of-heroes => crée un répertoire, y met le code et les dépendances
ng serve --open => lance l'appli sur localhost:4200
